{"version":3,"sources":["../src/utils.js","../src/tags.js","../src/attrs.js","../src/regexp.js","../src/purify.js"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","fun","x","Func","arrayForEach","unapply","Array","arrayPop","arrayPush","stringToLowerCase","String","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","RegExp","typeErrorCreate","unconstruct","args","transformCaseFunc","l","array","element","lcElement","set","newObject","property","object","desc","fallbackValue","console","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","_createTrustedTypesPolicy","trustedTypes","suffix","ATTR_NAME","document","policyName","createHTML","createScriptURL","scriptUrl","window","DOMPurify","createDOMPurify","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","lookupGetter","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","clone","hooks","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","addToSet","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","value","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","PARSER_MEDIA_TYPE","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","tagName","parentTagName","Boolean","_forceRemove","node","_removeAttribute","attribute","from","name","_initDocument","dirty","matches","leadingWhitespace","dirtyPayload","doc","body","_createIterator","root","_isClobbered","elm","_isNode","_executeHook","hook","_sanitizeElements","currentNode","allowedTags","_basicCustomElementTest","parentNode","childNodes","childCount","i","content","_isValidAttribute","lcName","lcTag","_sanitizeAttributes","attributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","_sanitizeShadowDOM","shadowIterator","shadowNode","importedNode","nodeIterator","oldNode","returnNode","serializedHTML"],"mappings":"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","file":"dompurify.js","sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ?? stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property]) === true) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"],"sourceRoot":"webpack:///"}