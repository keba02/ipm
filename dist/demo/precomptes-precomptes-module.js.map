{"version":3,"sources":["./src/app/precomptes/precomptes-routing.module.ts","./src/app/precomptes/save-precomptes/save-precomptes.component.css","./src/app/Models/Employe.ts","./src/app/precomptes/list-precomptes-mois/list-precomptes-mois.component.css","./src/app/Models/Precompte.ts","./src/app/precomptes/list-precomptes-mois/list-precomptes-mois.component.ts","./src/app/Models/PrecompteExcel.ts","./src/app/precomptes/list-precomptes-mois/list-precomptes-mois.component.html","./src/app/Services/precomptes.service.ts","./src/app/precomptes/precomptes.module.ts","./src/app/precomptes/save-precomptes/save-precomptes.component.html","./src/app/precomptes/save-precomptes/save-precomptes.component.ts"],"names":[],"mappings":"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","file":"precomptes-precomptes-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\nimport { ListPrecomptesMoisComponent } from './list-precomptes-mois/list-precomptes-mois.component';\nimport { SavePrecomptesComponent } from './save-precomptes/save-precomptes.component';\nexport const Preroutes: Routes = [\n  {\n    path: '',\n    children: [ {\n      path: 'Saveprecomptes',\n      component: SavePrecomptesComponent\n    }]\n},\n{\n  path: '',\n  children: [ {\n    path: 'Listprecomptesmois',\n    component: ListPrecomptesMoisComponent\n  }]\n},\n];\n\n// @NgModule({\n//   imports: [RouterModule.forChild(routes)],\n//   exports: [RouterModule]\n// })\n// export class PrecomptesRoutingModule { }\n","export default \"td{\\n  border: 0.5px solid black;\\n  padding: 10px;\\n}\\nbutton{\\n  background: black;\\n  padding: 10px;\\n  color: white;\\n  margin-bottom: 50px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJlY29tcHRlcy9zYXZlLXByZWNvbXB0ZXMvc2F2ZS1wcmVjb21wdGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsYUFBYTtBQUNmO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLFlBQVk7RUFDWixtQkFBbUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9wcmVjb21wdGVzL3NhdmUtcHJlY29tcHRlcy9zYXZlLXByZWNvbXB0ZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRke1xuICBib3JkZXI6IDAuNXB4IHNvbGlkIGJsYWNrO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuYnV0dG9ue1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgcGFkZGluZzogMTBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuIl19 */\";","import { Categorie } from \"./Categorie\";\nimport { Entity } from \"./Entity\";\nimport { IPM_StatutEmploye } from \"./IPM_StatutEmploye\";\nimport { Service } from \"./Service\";\n\nexport class Employe{\n    constructor(\n       public  idemp?: number,\n       public nom?:string,\n       public prenom?:string,\n       public sexe?:string,\n       public adresse_domicile?:string,\n       public date_nais?:Date,\n       public lieu_nais?:string,\n       public telephone?:string,\n       public date_recrutement?: Date,\n       public date_debut_suspension?:Date,\n       public date_fin_suspension?:Date,\n       public motifStatut?:string,\n       public matricule?:string,\n       public reference?:string,\n       public numero_carnet?:number,\n       public situation_familial?:string,\n       public solde?:number,\n       public cumul_charge?:number,\n       public niveau_salarial?:string,\n       public ipm_categorie?:Categorie,\n       public ipmService?:Service,\n       public ipmEntity?:Entity,\n       public photo?:string,\n      public statut?:boolean,\n      public ipmStatutEmploye?:IPM_StatutEmploye,\n      public justificatif?:string,\n      public Echelonnage?:string\n      //public certifier?:boolean,\n\n    ){}\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZWNvbXB0ZXMvbGlzdC1wcmVjb21wdGVzLW1vaXMvbGlzdC1wcmVjb21wdGVzLW1vaXMuY29tcG9uZW50LmNzcyJ9 */\";","import { Bareme } from \"./Bareme\";\nimport { Employe } from \"./Employe\";\n\nexport class Precompte{\n    constructor(\n    public IdPrecompte?:number,\n    public ipm_employe?:Employe,\n    public montantRembou?:number,\n    public datePrecompte?:string\n    )\n    {};\n}","import { DatePipe } from '@angular/common';\nimport { Component, OnInit,ElementRef, ViewChild } from '@angular/core';\nimport { DateAdapter } from '@angular/material/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Precompte } from 'src/app/Models/Precompte';\nimport { PrecomptesService } from 'src/app/Services/precomptes.service';\nimport * as xlsx from 'xlsx';\ndeclare var $;\n@Component({\n  selector: 'app-list-precomptes-mois',\n  templateUrl: './list-precomptes-mois.component.html',\n  styleUrls: ['./list-precomptes-mois.component.css']\n})\nexport class ListPrecomptesMoisComponent implements OnInit {\n listPrecompte:Precompte[];\n myDate;\n dateprecompte;\n message: Precompte=new Precompte();\n  datePrecompte: string;\n  constructor(private precompte_service: PrecomptesService,\n    private route: ActivatedRoute,private datePipe:DatePipe, private dateAdapter: DateAdapter<Date>)  { \n      this.dateAdapter.setLocale('en-GB');\n    }\n    \n  ngOnInit(): void {\n   // this.getDate();\n  }\n\n\n  getDate(){\n     this.myDate=this.datePipe.transform(this.datePrecompte,'yyyy-MM-dd');\n     console.log(this.datePrecompte);\n    this.precompte_service.getAllPrecompteDate(this.myDate).subscribe(\n      pres =>{\n        this.listPrecompte=pres;\n          this.showNotification('top', 'center', 1, '<b></b> :')\n          console.log(this.listPrecompte);\n        console.log(this.datePrecompte);\n      },err => {\n        console.log(err);\n        console.log(\"not existe\");\n        this.showNotification('top', 'center', 3, \"<b></b> :\")}\n    )\n  }\n\n  showNotification(from: any, align: any, idtype: any, note) {\n    const type = ['', 'success', 'warning', 'danger', 'info', 'rose', 'primary'];\n  \n    //const color = Math.floor((Math.random() * 6) + 1);\n  \n    $.notify({\n      icon: 'notifications',\n      message: note\n    }, {\n      type: type[idtype],\n      timer: 2000,\n      placement: {\n        from: from,\n        align: align\n      },\n      template: '<div data-notify=\"container\" class=\"col-xs-14 col-sm-6 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n        '<button mat-raised-button type=\"button\" aria-hidden=\"true\" class=\"close\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n        '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n        '<span data-notify=\"title\">{1}</span> ' +\n        '<span data-notify=\"message\">{2}</span>' +\n        '<div class=\"progress\" data-notify=\"progressbar\">' +\n        '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n        '</div>' +\n        '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n        '</div>'\n    });\n  \n  \n  }\n   /////////////////Export\n   @ViewChild('TABLE', { static: false }) TABLE: ElementRef; \n   fileDownload(){\n     const ws: xlsx.WorkSheet = xlsx.utils.table_to_sheet(this.TABLE.nativeElement);  \n     const wb: xlsx.WorkBook = xlsx.utils.book_new();  \n     xlsx.utils.book_append_sheet(wb, ws, 'Fichier Precompte');  \n     xlsx.writeFile(wb, 'precompte.xlsx');  \n  \n }\n}\n","export class PrecompteExcel{\n    Matricule:any\n    Prenom:any\n    Nom:any\n    Solde:any\n    MontantRemboursement:any\n    Date:any\n\n}","export default \"\\n\\n<style>\\n    b {\\n      color: black;\\n    }\\n  </style>\\n  <!---->\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header card-header-icon\\\">\\n      <div class=\\\"card-icon\\\" style=\\\"background-color:rgba(17, 17, 227, 0.88)\\\">\\n        <i class=\\\"material-icons\\\">search</i>\\n      </div>\\n      <h2 class=\\\"text-center\\\" style=\\\"background-color:whitesmoke; \\n      color: black; pading: 2px; width: 40%;\\\">Recherche par Date</h2>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n  \\n      <form>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group  col-md-3\\\" style=\\\"margin-top: -20px;\\\">\\n                <label><b>Date Precompte</b> </label>\\n                <!-- <input type=\\\"text\\\" name=\\\"dateprecompte\\\" class=\\\"form-control\\\" id=\\\"matricule\\\" [(ngModel)]=\\\"dateprecompte\\\"> -->\\n\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"datePrecompte\\\" id=\\\"datePrecompte\\\" name=\\\"datePrecompte\\\" \\n                [(ngModel)]=\\\"datePrecompte\\\" (click)=\\\"picker1.open()\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1 startView=\\\"year\\\"></mat-datepicker>\\n                </mat-form-field>\\n            </div>\\n       </div>\\n\\n       <div class=\\\"modal-footer justify-content-center\\\">\\n        <button mat-raised-button class=\\\"btn btn-raised btn-round btn-success\\\" (click)=\\\"getDate()\\\">recherche\\n        </button>\\n\\n      </div>\\n       </form>\\n    </div>\\n</div>              \\n\\n<style>\\n    tr{font-weight: bold;}\\n</style> \\n<div class=\\\"main-content\\\" *ngIf=\\\"listPrecompte\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-icon card-header-rose\\\">\\n                        <div class=\\\"card-icon\\\" style=\\\"background-color:rgba(17, 17, 227, 0.88)\\\">\\n                          <i class=\\\"material-icons\\\">list</i>\\n                        </div>\\n                        <!-- <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n                          <i class=\\\"material-icons\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalLRForm\\\"\\n                          >add_circle</i>\\n                      </button>   -->\\n                        <h4 class=\\\"card-title\\\">Liste des Precomptes</h4>\\n                        \\n                       \\n                    </div>\\n                        <div class=\\\"card-body table-full-width\\\">\\n                            <div class=\\\"material-datatable\\\">\\n                                \\n                                <table id=\\\"datatable\\\" class=\\\"table table-bordered table-striped\\\" \\n                                #TABLE cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\" class=\\\"table table-hover\\\">\\n                                \\n                                    <thead  style=\\\"background-color: whitesmoke;\\\"> \\n                                    <tr>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Matricule</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Prenom</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Nom</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Solde</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">M.Rembourser</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Date Precompte</th> \\n    \\n                                           </tr>\\n                                    </thead>\\n                                    <tbody >\\n                                          <tr *ngFor=\\\" let precom of listPrecompte\\\">\\n                                              <td class=\\\"text-center\\\"><b>{{precom.ipm_employe.matricule}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.ipm_employe.prenom}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.ipm_employe.nom}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.ipm_employe.solde}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.montantRembou}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.datePrecompte}}</b></td>\\n                                              \\n                            \\n                                              <!-- <td class=\\\"td-actions\\\">\\n                                                \\n                                                \\n\\n                                                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n                                                    <i class=\\\"material-icons\\\" data-toggle=\\\"modal\\\" data-target=\\\"#noticeModal\\\"\\n                                                >edit</i>\\n                                                </button>                                      \\n                                                 <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n                                                  <i class=\\\"material-icons\\\" [routerLink]=\\\"['/gestion-factures/Ajouterfactures/']\\\" \\n                                                  >perm_identity</i>\\n                                              </button>   \\n                                              </td> -->\\n                                              \\n                                        </tr>\\n                                       \\n                                    </tbody>\\n                                </table>\\n                            \\n                                <div class=\\\"modal-footer justify-content-center\\\">\\n                                    \\n                                    <div class=\\\"modal-footer justify-content-center\\\">\\n                                        <button (click)=\\\"fileDownload()\\\" mat-raised-button class=\\\"btn btn-info\\\">\\n                                          <i class=\\\"material-icons\\\">checked</i>Exporter Fichier</button>\\n                                        </div>\\n                            </div>\\n                        </div>\\n\\n                        </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\";","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Precompte } from '../Models/Precompte';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrecomptesService {\n\n  constructor(private http:HttpClient, private toastr: ToastrService) { }\n\n  public SavePrecompte(precompte:Precompte[]){\n    \n    return this.http.post(environment.URL+'precompte',precompte,{responseType: 'text' as 'json'})\n    .pipe(\n      catchError((this.erroHandler)\n    ));\n  }\n  erroHandler(error: HttpErrorResponse) {\n    return throwError(error.message || 'erreur de chargement');\n  }\n\n  public getAllPrecompteDate(datePrecompte:string):Observable<Precompte[]> {\n    \n    return this.http.get<Precompte[]>(environment.URL+'datePrecompte/'+datePrecompte);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../app.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { SavePrecomptesComponent } from './save-precomptes/save-precomptes.component';\nimport { Preroutes } from './precomptes-routing.module';\nimport { ListPrecomptesMoisComponent } from './list-precomptes-mois/list-precomptes-mois.component';\n\n\n\n@NgModule({\n  declarations: [SavePrecomptesComponent, ListPrecomptesMoisComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(Preroutes),\n    FormsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatRadioModule\n  ],\n  providers: [DatePipe]\n})\nexport class PrecomptesModule { }\n","export default \"<style>\\n    tr{font-weight: bold;}\\n</style> \\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-icon card-header-rose\\\">\\n                        <div class=\\\"card-icon\\\" style=\\\"background-color:rgba(17, 17, 227, 0.88)\\\">\\n                          <i class=\\\"material-icons\\\">list</i>\\n                        </div>\\n                        <!-- <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n                          <i class=\\\"material-icons\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalLRForm\\\"\\n                          >add_circle</i>\\n                      </button>   -->\\n                        <h4 class=\\\"card-title\\\">Liste des Precomptes</h4>\\n                        \\n                       \\n                    </div>\\n                        <div class=\\\"card-body table-full-width\\\">\\n                            <div class=\\\"material-datatable\\\">\\n                                \\n                                <table id=\\\"datatable\\\" class=\\\"table table-bordered table-striped\\\" \\n                                #TABLE cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\" class=\\\"table table-hover\\\">\\n                                \\n                                    <thead  style=\\\"background-color: whitesmoke;\\\"> \\n                                    <tr>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Matricule</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Prenom</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Nom</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Solde</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">M.Rembourser</th>\\n                                             <th style=\\\"font-weight: 600;\\\" class=\\\"text-center\\\" cope=\\\"col\\\">Date Precompte</th> \\n    \\n                                           </tr>\\n                                    </thead>\\n                                    <tbody >\\n                                          <tr *ngFor=\\\" let precom of listPanier;\\\">\\n                                              <td class=\\\"text-center\\\"><b>{{precom.matricule}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.prenom}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.nom}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.solde}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{precom.cumul_charge}}</b></td>\\n                                              <td class=\\\"text-center\\\"><b>{{dateprecompte}}</b></td>\\n                                              \\n                            \\n                                              <!-- <td class=\\\"td-actions\\\">\\n                                                \\n                                                \\n\\n                                                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n                                                    <i class=\\\"material-icons\\\" data-toggle=\\\"modal\\\" data-target=\\\"#noticeModal\\\"\\n                                                >edit</i>\\n                                                </button>                                      \\n                                                 <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n                                                  <i class=\\\"material-icons\\\" [routerLink]=\\\"['/gestion-factures/Ajouterfactures/']\\\" \\n                                                  >perm_identity</i>\\n                                              </button>   \\n                                              </td> -->\\n                                              \\n                                        </tr>\\n                                       \\n                                    </tbody>\\n                                </table>\\n                            \\n                                <div class=\\\"modal-footer justify-content-center\\\">\\n                                    <button (click)=\\\"savePrecom()\\\" mat-raised-button class=\\\"btn btn-success\\\">\\n                                      <i class=\\\"material-icons\\\">checked</i>Enregistrer Precompte</button>\\n                                    </div>\\n                                    <div class=\\\"modal-footer justify-content-center\\\">\\n                                        <button (click)=\\\"fileDownload()\\\" mat-raised-button class=\\\"btn btn-info\\\">\\n                                          <i class=\\\"material-icons\\\">checked</i>Exporter Fichier</button>\\n                                        </div>\\n                            </div>\\n                        </div>\\n\\n                        </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\";","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { element } from 'protractor';\nimport { Bareme } from 'src/app/Models/Bareme';\nimport { Employe } from 'src/app/Models/Employe';\nimport { Precompte } from 'src/app/Models/Precompte';\nimport { BaremeService } from 'src/app/Services/bareme.service';\nimport { EmployeService } from 'src/app/Services/employe.service';\nimport { PrecomptesService } from 'src/app/Services/precomptes.service';\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\nimport * as xlsx from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { DatePipe } from '@angular/common';\nimport { PrecompteExcel } from '../../Models/PrecompteExcel';\nimport { SidebarModule } from '../../sidebar/sidebar.module';\ndeclare const $: any;\n@Component({\n  selector: 'app-save-precomptes',\n  templateUrl: './save-precomptes.component.html',\n  styleUrls: ['./save-precomptes.component.css']\n})\nexport class SavePrecomptesComponent implements OnInit {\n  precompteForm: FormGroup;\n  listEmploye: Employe[];\n  barem: Bareme[];\n  iden: any;\n  precompte: Precompte = new Precompte();\n  message: number;\n  baremm: Bareme = new Bareme();\n  rembourse: any;\n  panier: Precompte = new Precompte();\n  listPanier =[];\n  listPre=[];\n  addEmploye:Employe;\n  annny: any;\n  myDate = new Date();\n  dateprecompte: string;\n  PrecompteExcel:PrecompteExcel=new PrecompteExcel()\n  PrecompteExcels=[]\n\n  constructor(private emp_service: EmployeService, private datePipe: DatePipe, private formbuildprecompte: FormBuilder,\n    private router: Router, private bareme_service: BaremeService, private precompte_service: PrecomptesService,\n    private route: ActivatedRoute) {\n          this.addEmploye=new Employe();\n     }\n\n  ngOnInit(): void {\n    this.dateprecompte=this.datePipe.transform(this.myDate, 'dd-MM-yyyy');\n    console.log(this.dateprecompte)\n\n    this.emp_service.listeEmploye().subscribe(\n      emps => {\n        console.log(emps);\n        this.listEmploye = emps;\n       this.getList();\n            \n      });\n  }\n  ////////////////////Tables\n  getList(){\n  \n    this.bareme_service.listeBareme().subscribe(\n      bars => {\n        this.barem = bars;\n        for (let ele = 0; ele < this.listEmploye.length; ele++) {\n          for (let element = 0; element < this.barem.length; element++) {\n            if (this.listEmploye[ele].solde <= this.barem[element].max && \n              this.listEmploye[ele].solde > this.barem[element].min) {\n                if (this.listEmploye[ele].solde > this.barem[element].montant) {\n                  console.log(this.listEmploye[ele]);\n              this.panier.ipm_employe = this.listEmploye[ele];\n               this.panier.montantRembou = this.barem[element].montant;\n              this.panier.datePrecompte=this.dateprecompte\n               this.listEmploye[ele].cumul_charge = this.panier.montantRembou\n              this.listPanier.push({...this.listEmploye[ele],...this.panier});\n              console.log(this.listPanier);\n                }\n                else{\n                  console.log(this.listEmploye[ele]);\n                  this.panier.ipm_employe = this.listEmploye[ele];\n                  this.panier.montantRembou =this.listEmploye[ele].solde;\n                  this.panier.datePrecompte=this.dateprecompte\n                   this.listEmploye[ele].cumul_charge = this.panier.montantRembou\n                  this.listPanier.push({...this.listEmploye[ele],...this.panier});\n                  console.log(this.listPanier);\n                }\n              \n              \n             // this.listPre=this.listPanier\n            }\n            \n            console.log(this.rembourse);\n          }\n\n\n        }\n        $(function () {\n          (<any>$('#datatable')).DataTable({\n            \"pagingType\": \"full_numbers\",\n            \"lengthMenu\": [\n              [10, 25, 50, -1],\n              [10, 25, 50, \"All\"]\n            ],\n            responsive: true,\n            language: {\n              search: \"_INPUT_\",\n              searchPlaceholder: \"Recherche\",\n              info: \" _START_/_END_ sur _TOTAL_ demandes\",\n              paginate: {\n                \"first\": \"Début\",\n                \"previous\": \"Précédent\",\n                \"next\": \"Suivant\",\n                \"last\": \"Fin\"\n              },\n              lengthMenu: \"Afficher par _MENU_\",\n              infoFiltered: \"\"\n            },\n    \n    \n          });\n    \n        })\n        this.PrecompteExcels=[]\n        console.log(this.listPanier);\n        for (let i = 0; i < this.listPanier.length; i++) {\n          this.PrecompteExcel.Matricule=this.listPanier[i].matricule\n          this.PrecompteExcel.Prenom=this.listPanier[i].prenom\n          this.PrecompteExcel.Nom=this.listPanier[i].nom\n          \n          this.PrecompteExcel.Solde=this.listPanier[i].solde\n          this.PrecompteExcel.MontantRemboursement=this.listPanier[i].montantRembou\n\n          this.PrecompteExcel.Date=this.listPanier[i].datePrecompte\n          this.PrecompteExcels.push({...this.PrecompteExcel} )\n          \n          \n        }\n      \n       \n      });\n      console.log(this.listPanier);\n     \n     \n  }\n  ////////////Enregistrer les précomptes \n  savePrecom(){\n     this.precompte_service.SavePrecompte(this.listPanier).subscribe(\n      (data) => {\n        console.log(this.listPanier);\n        console.log(data)\n        this.showALERTE('top', 'center')\n      });\n\n  }\n  ///////////////Fin/////////////////\n  ////////////fonction  Alerte\n  showALERTE(from: any, align: any) {\n    const type = ['', 'success', 'warning', 'danger', 'info', 'rose', 'primary'];\n\n    // const color = Math.floor((Math.random() * 6) + 1);\n\n    $.notify({\n      icon: 'notifications',\n      message: '<b>Enregistrement reussi des precomptes </b> :'\n    }, {\n      type: type[1],\n      timer: 13000,\n      placement: {\n        from: from,\n        align: align\n      },\n      template: '<div data-notify=\"container\" class=\"col-xs-14 col-sm-6 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n        '<button mat-raised-button type=\"button\" aria-hidden=\"true\" class=\"close\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n        '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n        '<span data-notify=\"title\">{1}</span> ' +\n        '<span data-notify=\"message\">{2}</span>' +\n        '<div class=\"progress\" data-notify=\"progressbar\">' +\n        '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n        '</div>' +\n        '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n        '</div>'\n    });\n  }\n\n\n  /////////////////Export\n // @ViewChild('TABLE', { static: false }) TABLE: ElementRef; \n  \n//   fileDownload(){\n//     const ws: xlsx.WorkSheet = xlsx.utils.table_to_sheet(this.TABLE.nativeElement);  \n//     const wb: xlsx.WorkBook = xlsx.utils.book_new();  \n//     xlsx.utils.book_append_sheet(wb, ws, 'Fichier Precompte');  \n//     xlsx.writeFile(wb, 'precompte.xlsx');  \n \n// }\nfileDownload() {\n  console.log(this.PrecompteExcels)\n  \n  // @ts-ignore\n  import(\"xlsx\").then(xlsx => {\n      const worksheet = xlsx.utils.json_to_sheet(this.PrecompteExcels);\n      const workbook = { Sheets: { 'fichier_excel': worksheet }, SheetNames: ['fichier_excel'] };\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\n      this.saveAsExcelFile(excelBuffer, \"PrecompteExcel\");\n  });\n}\nsaveAsExcelFile(buffer: any, fileName: string): void {\n  let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  let EXCEL_EXTENSION = '.xlsx';\n  const data: Blob = new Blob([buffer], {\n      type: EXCEL_TYPE\n  });\n  FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n}\n}\n"],"sourceRoot":"webpack:///"}